language: c

sudo: false

_anchors:
  - &gcc49-packages
    apt:
      sources:
      - ubuntu-toolchain-r-test
      packages:
      - gcc-4.9
      - g++-4.9
      - gobjc-4.9
      - gnustep-devel

matrix:
  include:
    # Linux Debug, GCC 4.9
    - compiler: gcc-4.9
      addons: *gcc49-packages
      env:
        CONFIGURATION: Debug
        GCOV: gcov-4.9
        CMAKE_OPTS: -DLANG_OBJC=ON
        COVERAGE: "ON"
    # Linux Release, GCC 4.9
    - compiler: gcc-4.9
      addons: *gcc49-packages
      env:
        CONFIGURATION: Release
        CMAKE_OPTS: -DLANG_OBJC=ON
    # Linux RelWithDebInfo, GCC 4.9
    - compiler: gcc-4.9
      addons: *gcc49-packages
      env:
        CONFIGURATION: RelWithDebInfo
        CMAKE_OPTS: -DLANG_OBJC=ON
        DEPLOY: true
    # Linux Debug, GCC 4.6
    - compiler: gcc
      env: CONFIGURATION=Debug TESTS=OFF
    # Linux Release, GCC 4.6
    - compiler: gcc
      env: CONFIGURATION=Release TESTS=OFF
    # Linux RelWithDebInfo, GCC 4.6
    - compiler: gcc
      env: CONFIGURATION=RelWithDebInfo TESTS=OFF
    # OSX Debug, GCC 4.9
    - os: osx
      compiler: gcc-4.9
      env:
        CONFIGURATION: Debug
        GCOV: gcov-4.9
        COVERAGE: "ON"
    # OSX Release, GCC 4.9
    - os: osx
      compiler: gcc-4.9
      env: CONFIGURATION=Release
    # OSX RelWithDebInfo, GCC 4.9
    - os: osx
      compiler: gcc-4.9
      env: CONFIGURATION=RelWithDebInfo
    # OSX Debug, Clang
    - os: osx
      compiler: clang
      env:
        CONFIGURATION: Debug
        CMAKE_OPTS: -DLANG_OBJC=ON
    # OSX Release, Clang
    - os: osx
      compiler: clang
      env:
        CONFIGURATION: Release
        CMAKE_OPTS: -DLANG_OBJC=ON
    # OSX RelWithDebInfo, Clang
    - os: osx
      compiler: clang
      env:
        CONFIGURATION: RelWithDebInfo
        CMAKE_OPTS: -DLANG_OBJC=ON
        DEPLOY: true

  allow_failures:
    - compiler: gcc

before_install:
  - |
      if [ "$TRAVIS_OS_NAME" = "osx" ] && [ "$CC" = "clang" ]; then
        brew update
        brew unlink cmake
        brew install llvm cmake
      fi
  - export CXX=${CC/gcc/g++}; export CXX=${CXX/clang/clang++}
  - $CC --version
  - $CXX --version

script:
  - mkdir -p build && cd $_
  - >
      cmake
      -Wno-dev
      -DCTESTS=${TESTS:-ON}
      -DCOVERALLS=${COVERAGE:-OFF}
      -DCMAKE_BUILD_TYPE=${CONFIGURATION}
      -DCMAKE_INSTALL_PREFIX=criterion-${TRAVIS_TAG}
      ${CMAKE_OPTS}
      ..
  - |
      if [ "${TESTS:-ON}" = "ON" ]; then
        TERM=dumb cmake --build . --target criterion_tests -- -j4
        ctest
      else
        TERM=dumb cmake --build . -- -j4
      fi

after_success:
  - |
      if [ "$COVERAGE" = "ON" ]; then
        make gcov
        bash <(curl -s https://codecov.io/bash)
      fi

after_failure:
  - |
      if [ "$TESTS" = "ON" ]; then
        cat Testing/Temporary/LastTest.log samples/*.{out,err} ../samples/tests/*.{out,err}
      fi

before_deploy:
  - make install
  - tar -cvjf criterion-${TRAVIS_TAG}-${TRAVIS_OS_NAME}-x86_64.tar.bz2 criterion-${TRAVIS_TAG}

deploy:
  provider: releases
  skip_cleanup: true
  api_key:
    secure: d3l2Ohb2FF3tSXku1d0ASR5dntdnQ48Jyc39IEloDBxFXCselCkYruUQv6p0TA3P+Dmrz4wS7/AFlBMMsQ3XfGFVIOnITiTaGWg5fEpIf7zYsDf0zECPE0MOHMGqJMn3/SrSKdtEA4N84Q4JS7Ou+ewG65mxUDO5Ce60OoEG5JA=
  file: criterion-${TRAVIS_TAG}-${TRAVIS_OS_NAME}-x86_64.tar.bz2
  on:
    repo: Snaipe/Criterion
    tags: true
    condition: $DEPLOY = true
