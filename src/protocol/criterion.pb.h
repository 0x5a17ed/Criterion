/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.5-dev at Wed Dec  9 01:51:00 2015. */

#ifndef PB_CRITERION_PB_H_INCLUDED
#define PB_CRITERION_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _criterion_msg_msg_type {
    criterion_msg_msg_type_BIRTH = 0,
    criterion_msg_msg_type_PRE_INIT = 1,
    criterion_msg_msg_type_PRE_TEST = 2,
    criterion_msg_msg_type_POST_TEST = 3,
    criterion_msg_msg_type_POST_FINI = 4,
    criterion_msg_msg_type_DEATH = 5,
    criterion_msg_msg_type_ASSERT = 6
} criterion_msg_msg_type;

typedef enum _criterion_msg_id_msg_id_type {
    criterion_msg_id_msg_id_type_PID = 0
} criterion_msg_id_msg_id_type;

typedef enum _criterion_death_result_type {
    criterion_death_result_type_NORMAL = 0,
    criterion_death_result_type_CRASH = 1,
    criterion_death_result_type_TIMEOUT = 2
} criterion_death_result_type;

/* Struct definitions */
typedef struct _criterion_birth {
    uint8_t dummy_field;
} criterion_birth;

typedef struct _criterion_post_fini {
    uint8_t dummy_field;
} criterion_post_fini;

typedef struct _criterion_pre_init {
    uint8_t dummy_field;
} criterion_pre_init;

typedef struct _criterion_assert {
    pb_callback_t message;
    bool passed;
    pb_callback_t file;
    bool has_line;
    int64_t line;
} criterion_assert;

typedef struct _criterion_death {
    bool has_result;
    criterion_death_result_type result;
    bool has_status;
    int64_t status;
} criterion_death;

typedef struct _criterion_msg_id_msg {
    criterion_msg_id_msg_id_type type;
    bool has_id_int;
    int64_t id_int;
    pb_callback_t id_str;
} criterion_msg_id_msg;

typedef struct _criterion_post_test {
    bool has_timestamp;
    int64_t timestamp;
} criterion_post_test;

typedef struct _criterion_pre_test {
    bool has_timestamp;
    int64_t timestamp;
} criterion_pre_test;

typedef struct _criterion_msg {
    int32_t version;
    criterion_msg_id_msg id;
    criterion_msg_msg_type type;
    pb_extension_t *extensions;
} criterion_msg;

/* Extensions */
extern const pb_extension_type_t criterion_birth_data; /* field type: criterion_birth data; */
extern const pb_extension_type_t criterion_pre_init_data; /* field type: criterion_pre_init data; */
extern const pb_extension_type_t criterion_pre_test_data; /* field type: criterion_pre_test data; */
extern const pb_extension_type_t criterion_post_test_data; /* field type: criterion_post_test data; */
extern const pb_extension_type_t criterion_post_fini_data; /* field type: criterion_post_fini data; */
extern const pb_extension_type_t criterion_death_data; /* field type: criterion_death data; */
extern const pb_extension_type_t criterion_assert_data; /* field type: criterion_assert data; */

/* Default values for struct fields */
extern const int32_t criterion_msg_version_default;
extern const criterion_msg_id_msg_id_type criterion_msg_id_msg_type_default;

/* Initializer values for message structs */
#define criterion_msg_init_default               {1, criterion_msg_id_msg_init_default, (criterion_msg_msg_type)0, NULL}
#define criterion_msg_id_msg_init_default        {criterion_msg_id_msg_id_type_PID, false, 0, {{NULL}, NULL}}
#define criterion_birth_init_default             {0}
#define criterion_pre_init_init_default          {0}
#define criterion_pre_test_init_default          {false, 0}
#define criterion_post_test_init_default         {false, 0}
#define criterion_post_fini_init_default         {0}
#define criterion_death_init_default             {false, (criterion_death_result_type)0, false, 0}
#define criterion_assert_init_default            {{{NULL}, NULL}, 0, {{NULL}, NULL}, false, 0}
#define criterion_msg_init_zero                  {0, criterion_msg_id_msg_init_zero, (criterion_msg_msg_type)0, NULL}
#define criterion_msg_id_msg_init_zero           {(criterion_msg_id_msg_id_type)0, false, 0, {{NULL}, NULL}}
#define criterion_birth_init_zero                {0}
#define criterion_pre_init_init_zero             {0}
#define criterion_pre_test_init_zero             {false, 0}
#define criterion_post_test_init_zero            {false, 0}
#define criterion_post_fini_init_zero            {0}
#define criterion_death_init_zero                {false, (criterion_death_result_type)0, false, 0}
#define criterion_assert_init_zero               {{{NULL}, NULL}, 0, {{NULL}, NULL}, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define criterion_assert_message_tag             1
#define criterion_assert_passed_tag              2
#define criterion_assert_file_tag                3
#define criterion_assert_line_tag                4
#define criterion_death_result_tag               1
#define criterion_death_status_tag               2
#define criterion_msg_id_msg_type_tag            1
#define criterion_msg_id_msg_id_int_tag          2
#define criterion_msg_id_msg_id_str_tag          3
#define criterion_post_test_timestamp_tag        1
#define criterion_pre_test_timestamp_tag         1
#define criterion_msg_version_tag                1
#define criterion_msg_id_tag                     2
#define criterion_msg_type_tag                   3
#define criterion_birth_data_tag                 100
#define criterion_pre_init_data_tag              101
#define criterion_pre_test_data_tag              102
#define criterion_post_test_data_tag             103
#define criterion_post_fini_data_tag             104
#define criterion_death_data_tag                 105
#define criterion_assert_data_tag                106

/* Struct field encoding specification for nanopb */
extern const pb_field_t criterion_msg_fields[5];
extern const pb_field_t criterion_msg_id_msg_fields[4];
extern const pb_field_t criterion_birth_fields[1];
extern const pb_field_t criterion_pre_init_fields[1];
extern const pb_field_t criterion_pre_test_fields[2];
extern const pb_field_t criterion_post_test_fields[2];
extern const pb_field_t criterion_post_fini_fields[1];
extern const pb_field_t criterion_death_fields[3];
extern const pb_field_t criterion_assert_fields[5];

/* Maximum encoded size of messages (where known) */
#define criterion_msg_size                       (19 + criterion_msg_id_msg_size)
#define criterion_birth_size                     0
#define criterion_pre_init_size                  0
#define criterion_pre_test_size                  11
#define criterion_post_test_size                 11
#define criterion_post_fini_size                 0
#define criterion_death_size                     13

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define CRITERION_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
