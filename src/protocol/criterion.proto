package criterion.protocol;


message birth {
}

message pre_init {
}

message pre_test {
    optional int64 timestamp = 1;
}

message post_test {
    optional int64 timestamp = 1;
}

message post_fini {
}

message death {
    enum result_type {
        NORMAL = 0;
        CRASH = 1;
        TIMEOUT = 2;
    }

    optional result_type result = 1;
    optional int64 status = 2;
}

message assert {
    required string message = 1;
    required bool passed = 2;
    optional string file = 3;
    optional int64 line = 4;
}

message submessage {

    optional criterion.protocol.birth       birth      = 1;
    optional criterion.protocol.pre_init    pre_init   = 2;
    optional criterion.protocol.pre_test    pre_test   = 3;
    optional criterion.protocol.post_test   post_test  = 4;
    optional criterion.protocol.post_fini   post_fini  = 5;
    optional criterion.protocol.death       death      = 6;
    optional criterion.protocol.assert      assert     = 7;

}

message msg {

    required int32 version = 1 [default = 1];

    oneof id {
        int64 pid = 2;
    }

    required submessage data = 16;
}
